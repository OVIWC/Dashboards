geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_continuous(breaks = seq(min(GW_All$Date), max(GW_All$Date), by = 3)) +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_continuous(breaks = seq(min(GW_All$Date), max(GW_All$Date), by = 3 years)) +
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = 3 years, minor_break = 1 years) +
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "3 years") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "3 years", date_labels = "%Y") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "3 years", date_labels = "%Y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "1 years", date_labels = "%y") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "1 years", date_labels = "'%y") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "2 years", date_labels = "'%y") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "2 years", date_labels = "'%y", minor_breaks = "1 years") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "2 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "2 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
BS1plot
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "2 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
geom_smooth(color = "red") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BS1plot)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BS1plot)
GW_All <- tbl(GW, "WQTS_Data") %>%
filter(CharacteristicName == 'Depth') %>%
collect() %>%
group_by(MONLOC_AB) %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
mutate(month = floor_date(StartDate, "month"))  %>%
group_by(MONLOC_AB, StartDate) %>%
summarise(mean = mean(ResultMeasureValue)) %>%
rename(Well = MONLOC_AB, Date = StartDate, DTW = mean) %>%
round(DTW, 2)
GW_All <- tbl(GW, "WQTS_Data") %>%
filter(CharacteristicName == 'Depth') %>%
collect() %>%
group_by(MONLOC_AB) %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
mutate(month = floor_date(StartDate, "month"))  %>%
group_by(MONLOC_AB, StartDate) %>%
summarise(mean = mean(ResultMeasureValue)) %>%
rename(Well = MONLOC_AB, Date = StartDate, DTW = mean)
GW_All <- tbl(GW, "WQTS_Data") %>%
filter(CharacteristicName == 'Depth') %>%
collect() %>%
group_by(MONLOC_AB) %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
mutate(month = floor_date(StartDate, "month"))  %>%
group_by(MONLOC_AB, StartDate) %>%
summarise(mean = mean(ResultMeasureValue)) %>%
rename(Well = MONLOC_AB, Date = StartDate, DTW = mean) %>%
round(GW_All$DTW, 2)
GW_All <- tbl(GW, "WQTS_Data") %>%
filter(CharacteristicName == 'Depth') %>%
collect() %>%
group_by(MONLOC_AB) %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
mutate(month = floor_date(StartDate, "month"))  %>%
group_by(MONLOC_AB, StartDate) %>%
summarise(mean = mean(ResultMeasureValue)) %>%
rename(Well = MONLOC_AB, Date = StartDate, DTW = mean) %>%
GW_All$DTW <- round(GW_All$DTW, 2)
GW_All$DTW <- round(GW_All$DTW, 2)
BS1plot <- ggplot(data = filter(GW_All, Well == "BS-Res-1"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BS1plot)
BS2 <- tbl(GW, "WQTS_Data") %>%
filter(MONLOC_AB == "BS-Res-2") %>%
filter(CharacteristicName == 'Pressure') %>%
collect() %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
group_by(StartDate) %>%
summarise(mean = mean(ResultMeasureValue))
View(BS2)
BS2 <- tbl(GW, "WQTS_Data") %>%
filter(MONLOC_AB == "BS-Res-2") %>%
filter(CharacteristicName == 'Pressure') %>%
collect() %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
group_by(StartDate) %>%
summarise(daily_average_psi = mean(ResultMeasureValue))
BS2 <- tbl(GW, "WQTS_Data") %>%
filter(MONLOC_AB == "BS-Res-2") %>%
filter(CharacteristicName == 'Pressure') %>%
collect() %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
group_by(StartDate) %>%
summarise(daily_average_psi = mean(ResultMeasureValue))
BS2$daily_average_psi <- round(BS2$daily_average_psi, 2)
BS2plot <- ggplot(data = BS2, aes(x = Date, y = DTW))+
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = " PSI (Artesian Well)", title = " BS-Res-2")
BS2plot
BS2 <- tbl(GW, "WQTS_Data") %>%
filter(MONLOC_AB == "BS-Res-2") %>%
filter(CharacteristicName == 'Pressure') %>%
collect() %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
group_by(StartDate) %>%
summarise(daily_average_psi = mean(ResultMeasureValue))
BS2$daily_average_psi <- round(BS2$daily_average_psi, 2)
BS2plot <- ggplot(data = BS2, aes(x = StartDate, y = daily_average_psi))+
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = " PSI (Artesian Well)", title = " BS-Res-2")
ggplotly(BS2plot)
BS2 <- tbl(GW, "WQTS_Data") %>%
filter(MONLOC_AB == "BS-Res-2") %>%
filter(CharacteristicName == 'Pressure') %>%
collect() %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
group_by(StartDate) %>%
summarise(daily_average_psi = mean(ResultMeasureValue)) %>%
rename( Date = StartDate)
BS2$daily_average_psi <- round(BS2$daily_average_psi, 2)
BS2plot <- ggplot(data = BS2, aes(x = Date, y = daily_average_psi))+
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = " PSI (Artesian Well)", title = " BS-Res-2")
ggplotly(BS2plot)
BS2 <- tbl(GW, "WQTS_Data") %>%
filter(MONLOC_AB == "BS-Res-2") %>%
filter(CharacteristicName == 'Pressure') %>%
collect() %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
group_by(StartDate) %>%
summarise(daily_average_psi = mean(ResultMeasureValue)) %>%
rename( Date = StartDate)
BS2$daily_average_psi <- round(BS2$daily_average_psi, 2)
BS2plot <- ggplot(data = BS2, aes(x = Date, y = daily_average_psi))+
geom_line(color = "blue") +
theme_bw(base_size=15) +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
labs( x = NULL, y = " PSI (Artesian Well)", title = " BS-Res-2")
ggplotly(BS2plot)
BP4plot <- ggplot(data = filter(GW_All, Well == "BP-Res-4"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BS-Res-1") +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BP4plot)
BP4plot <- ggplot(data = filter(GW_All, Well == "BP-Res-4"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = "BP-Res-4") +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BP4plot)
BP3plot <- ggplot(data = filter(GW_All, Well == "BP-Res-3"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = NULL) +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(BP3plot)
LP6plot <- ggplot(data = filter(GW_All, Well == "LP-Res-6"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = NULL) +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(LP6plot)
LP5plot <- ggplot(data = filter(GW_All, Well == "LP-Res-5"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = NULL) +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(LP5plot)
LP4plot <- ggplot(data = filter(GW_All, Well == "LP-Res-4"), aes(x = Date, y = DTW)) +
geom_line(color = "blue") +
theme_bw(base_size=15) +
labs( x = NULL, y = "Depth To Water (feet)", title = NULL) +
scale_x_date(date_breaks = "1 years", date_labels = "'%y", minor_breaks = "1 year") +
scale_y_reverse()
ggplotly(LP4plot)
library(flexdashboard)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(leaflet)
GW <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "WQTS",
Trusted_Connection = "True")
#GW data all
GW_All <- tbl(GW, "WQTS_Data") %>%
filter(CharacteristicName == 'Depth') %>%
collect() %>%
group_by(MONLOC_AB) %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
mutate(month = floor_date(StartDate, "month"))  %>%
group_by(MONLOC_AB, StartDate) %>%
summarise(mean = mean(ResultMeasureValue)) %>%
rename(Well = MONLOC_AB, Date = StartDate, DTW = mean)
GW_All$DTW <- round(GW_All$DTW, 2)
LP_leaflet_map <- leaflet(width = "100%") %>%
setView(lng = -118.05265, lat = 36.59757, zoom = 13) %>%
addProviderTiles(provider = providers$OpenStreetMap) %>%
addMarkers(lng= -118.05712, lat = 36.60078, popup = "Well LP-Res-4")
LP_leaflet_map
LP_leaflet_map <- leaflet(width = "100%") %>%
setView(lng = -118.05265, lat = 36.59757, zoom = 13) %>%
addProviderTiles(provider = providers$OpenStreetMap) %>%
addMarkers(lng= -118.05712, lat = 36.60078, popup = "Well LP-Res-4") %>%
addMarkers(lng= -118.05689, lat = 36.60075, popup = "Well LP-Res-5") %>%
addMarkers(lng= -118.05970, lat = 36.59436, popup = "Well LP-Res-6")
LP_leaflet_map
LP_leaflet_map <- leaflet(width = "100%") %>%
setView(lng = -118.05265, lat = 36.59757, zoom = 8) %>%
addProviderTiles(provider = providers$OpenStreetMap) %>%
addMarkers(lng= -118.05712, lat = 36.60078, popup = "Well LP-Res-4") %>%
addMarkers(lng= -118.05689, lat = 36.60075, popup = "Well LP-Res-5") %>%
addMarkers(lng= -118.05970, lat = 36.59436, popup = "Well LP-Res-6")
LP_leaflet_map
LP_leaflet_map <- leaflet(width = "100%") %>%
setView(lng = -118.05265, lat = 36.59757, zoom = 15) %>%
addProviderTiles(provider = providers$OpenStreetMap) %>%
addMarkers(lng= -118.05712, lat = 36.60078, popup = "Well LP-Res-4") %>%
addMarkers(lng= -118.05689, lat = 36.60075, popup = "Well LP-Res-5") %>%
addMarkers(lng= -118.05970, lat = 36.59436, popup = "Well LP-Res-6")
LP_leaflet_map
install.packages("crosstalk")
install.packages("crosstalk")
install.packages("crosstalk")
library(flexdashboard)
library(crosstalk)
library(flexdashboard)
library(crosstalk)
install.packages(c("askpass", "blob", "broom", "bslib", "cachem", "cli", "commonmark", "cpp11", "curl", "data.table", "dataRetrieval", "DBI", "dbplyr", "digest", "dplyr", "DT", "dtplyr", "evaluate", "fansi", "forcats", "gargle", "ggmap", "ggplot2", "glue", "googledrive", "googlesheets4", "gt", "gtable", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "labeling", "later", "leaflet", "leaflet.providers", "lifecycle", "lubridate", "markdown", "modelr", "odbc", "openssl", "plotly", "plyr", "prettyunits", "processx", "progress", "ps", "purrr", "raster", "Rcpp", "reactR", "readr", "readxl", "rematch", "reprex", "RgoogleMaps", "rlang", "rstudioapi", "sass", "scales", "sp", "stringi", "stringr", "sys", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridis", "viridisLite", "vroom", "withr", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "blob", "broom", "bslib", "cachem", "cli", "commonmark", "cpp11", "curl", "data.table", "dataRetrieval", "DBI", "dbplyr", "digest", "dplyr", "DT", "dtplyr", "evaluate", "fansi", "forcats", "gargle", "ggmap", "ggplot2", "glue", "googledrive", "googlesheets4", "gt", "gtable", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "labeling", "later", "leaflet", "leaflet.providers", "lifecycle", "lubridate", "markdown", "modelr", "odbc", "openssl", "plotly", "plyr", "prettyunits", "processx", "progress", "ps", "purrr", "raster", "Rcpp", "reactR", "readr", "readxl", "rematch", "reprex", "RgoogleMaps", "rlang", "rstudioapi", "sass", "scales", "sp", "stringi", "stringr", "sys", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridis", "viridisLite", "vroom", "withr", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "blob", "broom", "bslib", "cachem", "cli", "commonmark", "cpp11", "curl", "data.table", "dataRetrieval", "DBI", "dbplyr", "digest", "dplyr", "DT", "dtplyr", "evaluate", "fansi", "forcats", "gargle", "ggmap", "ggplot2", "glue", "googledrive", "googlesheets4", "gt", "gtable", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "labeling", "later", "leaflet", "leaflet.providers", "lifecycle", "lubridate", "markdown", "modelr", "odbc", "openssl", "plotly", "plyr", "prettyunits", "processx", "progress", "ps", "purrr", "raster", "Rcpp", "reactR", "readr", "readxl", "rematch", "reprex", "RgoogleMaps", "rlang", "rstudioapi", "sass", "scales", "sp", "stringi", "stringr", "sys", "terra", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridis", "viridisLite", "vroom", "withr", "xfun", "xml2", "yaml"))
library(flexdashboard)
library(flexdashboard)
library(htmltools)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
library(flexdashboard)
remove.packages("htmltools")
install.packages("htmltools")
library(flexdashboard)
library(crosstalk)
library(flexdashboard)
library(crosstalk)
library(tidyverse)
detach("package:ggplot2", unload = TRUE)
detach("package:flexdashboard", unload = TRUE)
detach("package:tibble", unload = TRUE)
library(tidyverse)
install.packages(c("cli", "data.table", "digest", "dplyr", "fansi", "glue", "odbc", "Rcpp", "rlang", "utf8", "vctrs", "xfun"))
install.packages(c("cli", "data.table", "digest", "dplyr", "fansi", "glue", "odbc", "Rcpp", "rlang", "utf8", "vctrs", "xfun"))
install.packages(c("cli", "data.table", "digest", "dplyr", "fansi", "glue", "odbc", "Rcpp", "rlang", "utf8", "vctrs", "xfun"))
library(flexdashboard)
library(crosstalk)
library(tidyverse)
install.packages("tidyverse")
remove.packages("tidyverse")
install.packages("tidyverse")
library(flexdashboard)
library(crosstalk)
library(tidyverse)
remove.packages("cli")
install.packages("cli")
library(flexdashboard)
library(crosstalk)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
install.packages("cli")
library(flexdashboard)
library(crosstalk)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(leaflet)
WQ <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "TWQD",
Trusted_Connection = "True")
#GW data all
GW_All <- tbl(GW, "WQTS_Data") %>%
filter(CharacteristicName == 'Depth') %>%
collect() %>%
group_by(MONLOC_AB) %>%
mutate(StartDate = as.Date(StartDate), ResultMeasureValue = as.numeric(ResultMeasureValue)) %>%
complete(StartDate = seq.Date(min(StartDate), max(StartDate), by = "day")) %>%
mutate(month = floor_date(StartDate, "month"))  %>%
group_by(MONLOC_AB, StartDate) %>%
summarise(mean = mean(ResultMeasureValue)) %>%
rename(Well = MONLOC_AB, Date = StartDate, DTW = mean)
WQ_All <- tbl(WQ, "Result") %>%
collect()
View(WQ_All)
WQ_Activity <- tbl(WQ, "Activity") %>%
collect()
View(WQ_Activity)
WQ_Result <- tbl(WQ, "Result") %>%
collect()
View(WQ_Result)
WQ_All <- inner_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier")
WQ_All <- inner_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier")
library(flexdashboard)
library(crosstalk)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(leaflet)
WQ <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "TWQD",
Trusted_Connection = "True")
#GW data all
WQ_Result <- tbl(WQ, "Result") %>%
collect()
WQ_Activity <- tbl(WQ, "Activity") %>%
collect()
WQ_All <- inner_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier")
WQ_All <- inner_join(WQ_Result, WQ_Activity, by = ActivityIdentifier)
library(flexdashboard)
library(crosstalk)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(leaflet)
WQ <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "TWQD",
Trusted_Connection = "True")
#GW data all
WQ_Result <- tbl(WQ, "Result") %>%
collect()
WQ_Activity <- tbl(WQ, "Activity") %>%
collect()
WQ_All <- inner_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier")
WQ_All <- inner_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier", all = TRUE)
WQ_All <- full_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier", all = TRUE)
WQ_All <- full_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier")
library(flexdashboard)
library(crosstalk)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(leaflet)
WQ <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "TWQD",
Trusted_Connection = "True")
#GW data all
WQ_Result <- tbl(WQ, "Result") %>%
collect()
WQ_Activity <- tbl(WQ, "Activity") %>%
collect()
WQ_All <- full_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier")
WQ_Result <- tbl(WQ, "Result") %>%
collect()
WQ_Activity <- tbl(WQ, "Activity") %>%
collect()
WQ_All <- left_join(WQ_Result, WQ_Activity, by = "ActivityIdentifier")
WQ_All <- WQ_Result %>%
left_join(WQ_Activity, by = "ActivityIdentifier")
WQ_All <- WQ_Result %>%
left_join(WQ_Result,WQ_Activity, by = "ActivityIdentifier")
WQ_All <- merge(WQ_Result,WQ_Activity, by = "ActivityIdentifier")
