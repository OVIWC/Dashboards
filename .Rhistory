left_join(WQ_Result,WQ_Activity, by = "ActivityIdentifier")
WQ_All <- merge(WQ_Result,WQ_Activity, by = "ActivityIdentifier")
library(flexdashboard)
library(crosstalk)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(leaflet)
library(DT)
library(htmlwidgets)
WQ <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "localhost\\SQLEXPRESS",
Database = "TWQD",
Trusted_Connection = "True")
#GW data all
WQ_Result <- tbl(WQ, "Result") %>%
collect()
WQ_Activity <- tbl(WQ, "Activity") %>%
collect()
WQ_All <- inner_join(WQ_Result,WQ_Activity, by = "ActivityIdentifier") %>%
select(CharacteristicName, ResultMeasureValue, ResultMeasureUnitCode, StartDate.y, StartTime.y, MonitoringLocationIdentifier.y, ProjectIdentifier.y) %>%
rename(Characteristic = CharacteristicName, Result = ResultMeasureValue, Unit = ResultMeasureUnitCode, Date = StartDate.y, Time = StartTime.y, Site = MonitoringLocationIdentifier.y, Project = ProjectIdentifier.y) %>%
mutate(Result = as.numeric(Result)) %>%
mutate(Result = if_else(Characteristic == "Temperature, water", (Result*9/5) + 32, Result)) %>%
mutate(Unit = if_else(Characteristic == "Temperature, water", "deg F", Unit))
LP_Water_Temp_Plot <- ggplot(data = filter(LP_data_past_year, Characteristic == "Temperature, water"), aes(x= Date, y = Result, color = Site)) +
geom_line() +
labs(title = "", y = "Degrees F")
LP_data_past_year <- WQ_All %>%
filter(Project == "SWQM-LP") %>%
mutate(Date = as.Date(Date)) %>%
mutate(Result = as.numeric(Result)) %>%
filter(Date >= (Sys.Date() - years(2)))
LP_Water_Temp_Plot <- ggplot(data = filter(LP_data_past_year, Characteristic == "Temperature, water"), aes(x= Date, y = Result, color = Site)) +
geom_line() +
labs(title = "", y = "Degrees F")
ggplotly(LP_Water_Temp_Plot)
LP_data_past_year <- WQ_All %>%
filter(Project == "SWQM-LP") %>%
mutate(Date = as.Date(Date)) %>%
mutate(Result = as.numeric(Result)) %>%
filter(Date >= (Sys.Date() - years(2)))
LP_Water_Temp_Plot <- ggplot(data = filter(LP_data_past_year, Characteristic == "Temperature, water"), aes(x= Date, y = Result, color = Site)) +
geom_point() +
labs(title = "", y = "Degrees F")
ggplotly(LP_Water_Temp_Plot)
BP_data <- WQ_All %>%
filter(Project == "GWQM-BP") %>%
select(-Project) %>%
arrange(desc(Date), Site)
BP_table <- datatable(BP_data, extensions = c("Buttons", "FixedColumns"),
filter = 'top',
options = list (autoWidth = TRUE,
dom = 'Bfrtip',
pageLength = 30,
searchHighlight = FALSE,
scrollx = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover'),
rownames = FALSE)
BP_table
BP_data <- WQ_All %>%
filter(Project == "GWQM-BP") %>%
select(-Project) %>%
arrange(desc(Date), Site)
BP_table <- datatable(BP_data, extensions = c("Buttons", "FixedColumns"),
filter = 'top',
options = list (autoWidth = TRUE,
dom = 'Bfrtip',
pageLength = 30,
searchHighlight = FALSE,
scrollx = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover'),
rownames = FALSE)
BP_table
BP_data <- WQ_All %>%
filter(Project == "GWQM-BP") %>%
select(-Project) %>%
arrange(desc(Date), Site)
BP_table <- datatable(BP_data, extensions = c( "FixedColumns"),
filter = 'top',
options = list (autoWidth = TRUE,
dom = 'Bfrtip',
pageLength = 30,
searchHighlight = FALSE,
scrollx = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover'),
rownames = FALSE)
BP_table
# load required packages
library(tidyverse)
#Web Scraping Flow data
#Ian Bell December 2023
# load required packages
library(tidyverse)
library(rvest)
# specify the URL to scrape
northern_url <- "https://wsoweb.ladwp.com/Aqueduct/realtime/norealtime.htm"
southern_url <- "https://wsoweb.ladwp.com/Aqueduct/realtime/sorealtime.htm"
# read the HTML content of the webpage
page <- read_html(northern_url)
so_page <- read_html(southern_url)
# extract the Station and Flow data table
RockCreek <- page %>%
html_node("div#RockCreek32270") %>%
html_text()
PleasantValleyOutflow <- page %>%
html_node("div#PlesVllyOutFlow32890") %>%
html_text()
BishopCreekThru <- page %>%
html_node("div#BishopCrkAtPlanSix39990") %>%
html_text()
BishopCreekAround <- page %>%
html_node("div#BishopCrkAtPlanSix39980") %>%
html_text()
BakerCreek <- page %>%
html_node("div#BakerCrk20640") %>%
html_text()
BigPineCreek <- page %>%
html_node("div#BigPineCrkUSGS20520") %>%
html_text()
FishSprings <- page %>%
html_node("div#FishSprngsatRR20590") %>%
html_text()
OwensRiverBelowBPC <- page %>%
html_node("div#OwensRivBelowBPC20660") %>%
html_text()
TinemahaResOutflow <- page %>%
html_node("div#TinemahaResOutflw00770") %>%
html_text()
IndependenceCreek <- so_page %>%
html_node("div#IndCreek00710") %>%
html_text()
LonePineCreek <- so_page %>%
html_node("div#LonePineCrk") %>%
html_text()
CottonwoodCreek <- so_page %>%
html_node("div#CottonWdCrk00450") %>%
html_text()
LAAAlabamaGates <- so_page %>%
html_node("div#AlabamaFlow00490") %>%
html_text()
LAACottonwoodGates <- so_page %>%
html_node("div#CottonGateFlow00500") %>%
html_text()
# convert the list to a data frame
flow_df <- data.frame(RockCreek, PleasantValleyOutflow, BishopCreekThru, BishopCreekAround, BakerCreek, BigPineCreek, FishSprings, OwensRiverBelowBPC, TinemahaResOutflow, IndependenceCreek, LonePineCreek,
CottonwoodCreek, LAAAlabamaGates, LAACottonwoodGates ) %>%
pivot_longer(cols = everything() ,names_to = "Site", values_to = "Flow_CFS") %>%
mutate('Flow_CFS' = as.numeric(Flow_CFS)) %>%
mutate(`DateTime` = format(Sys.time(), "%Y-%m-%d %H:%M"))
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Flow_CFS = sum(Flow_CFS), DateTime )
all_flow <- bind_rows(flow_df, flow_df2)
View(all_flow)
View(flow_df2)
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Flow_CFS = sum(Flow_CFS), DateTime ) %>%
slice(-n())
View(flow_df2)
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Flow_CFS = sum(Flow_CFS), DateTime )
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Flow_CFS = sum(Flow_CFS), DateTime ) %>%
slice(-n())
all_flow <- bind_rows(flow_df, flow_df2)
View(flow_df)
View(all_flow)
View(all_flow)
# set Working Directory
setwd('C:/Users/envir/Documents/106/Streamflow/LADWP_WebScraping')
streamflow2 <- read_csv("streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(streamflow2)
streamflow2 <- read_csv("streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
View(streamflow2)
combined <- bind_rows(clean_table, streamflow)
combined <- bind_rows(all_flow, streamflow2)
# convert the list to a data frame
flow_df <- data.frame(RockCreek, PleasantValleyOutflow, BishopCreekThru, BishopCreekAround, BakerCreek, BigPineCreek, FishSprings, OwensRiverBelowBPC, TinemahaResOutflow, IndependenceCreek, LonePineCreek,
CottonwoodCreek, LAAAlabamaGates, LAACottonwoodGates ) %>%
pivot_longer(cols = everything() ,names_to = "Site", values_to = "Flow_CFS") %>%
mutate('Flow_CFS' = as.numeric(Flow_CFS)) %>%
mutate(`DateTime` = format(Sys.time(), "%Y-%m-%d %H:%M")) %>%
mutate(DateTime = as.POSIXct(DateTime))
View(flow_df)
# add flows for Bishop Creek
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Flow_CFS = sum(Flow_CFS), DateTime ) %>%
slice(-n())
all_flow <- bind_rows(flow_df, flow_df2)
combined <- bind_rows(all_flow, streamflow2)
View(combined)
# add flows for Bishop Creek
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Streamflow_CFS = sum(Flow_CFS), DateTime ) %>%
slice(-n())
all_flow <- bind_rows(flow_df, flow_df2)
streamflow2 <- read_csv("streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
combined <- bind_rows(all_flow, streamflow2)
View(combined)
# add flows for Bishop Creek
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Streamflow_CFS = sum(Flow_CFS), DateTime ) %>%
slice(-n())
View(flow_df2)
flow_df
# convert the list to a data frame
flow_df <- data.frame(RockCreek, PleasantValleyOutflow, BishopCreekThru, BishopCreekAround, BakerCreek, BigPineCreek, FishSprings, OwensRiverBelowBPC, TinemahaResOutflow, IndependenceCreek, LonePineCreek,
CottonwoodCreek, LAAAlabamaGates, LAACottonwoodGates ) %>%
pivot_longer(cols = everything() ,names_to = "Site", values_to = "Streamflow_CFS") %>%
mutate('Flow_CFS' = as.numeric(Flow_CFS)) %>%
mutate(`DateTime` = format(Sys.time(), "%Y-%m-%d %H:%M")) %>%
mutate(DateTime = as.POSIXct(DateTime))
_
# convert the list to a data frame
flow_df <- data.frame(RockCreek, PleasantValleyOutflow, BishopCreekThru, BishopCreekAround, BakerCreek, BigPineCreek, FishSprings, OwensRiverBelowBPC, TinemahaResOutflow, IndependenceCreek, LonePineCreek,
CottonwoodCreek, LAAAlabamaGates, LAACottonwoodGates ) %>%
pivot_longer(cols = everything() ,names_to = "Site", values_to = "Streamflow_CFS") %>%
mutate('Streamflow_CFS' = as.numeric(Streamflow_CFS)) %>%
mutate(`DateTime` = format(Sys.time(), "%Y-%m-%d %H:%M")) %>%
mutate(DateTime = as.POSIXct(DateTime))
# add flows for Bishop Creek
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Streamflow_CFS = sum(Flow_CFS), DateTime ) %>%
slice(-n())
# add flows for Bishop Creek
flow_df2 <- flow_df %>%
filter(Site %in% c("BishopCreekThru", "BishopCreekAround")) %>%
summarise(Site = "BishopCreeKTotal", Streamflow_CFS = sum(Streamflow_CFS), DateTime ) %>%
slice(-n())
all_flow <- bind_rows(flow_df, flow_df2)
View(all_flow)
combined <- bind_rows(all_flow, streamflow2)
View(combined)
write.csv(combined, file = "streamflow2.csv", row.names = FALSE)
write.csv(combined, file = "streamflow2.csv", row.names = FALSE)
library(flexdashboard)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(leaflet)
streamflow2 <- read_csv("streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
View(streamflow2)
streamflow2 <- read_csv("streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M:%S")))
View(streamflow2)
streamflow2 <- read_csv("streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
streamflow2 <- read_csv("C:/Users/envir/Documents/106/Streamflow/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
streamflow2 <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
View(streamflow2)
View(streamflow2)
RockCreek <- ggplot(data = filter(streamflow2, Site == "RockCreek"), aes(x = DateTime, y = Streamflow_CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 years", date_labels = "%Y", minor_breaks = "1 year")
ggplotly(RockCreek)
streamflow2 <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M"))) %>%
mutate(month = floor_date(DateTime, "month"))  %>%
group_by(Site, DateTime) %>%
summarise(CFS = mean(Streamflow_CFS))
streamflow2 <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M"))) %>%
mutate(month = floor_date(DateTime, "month"))  %>%
group_by(Site) %>%
summarise(CFS = mean(Streamflow_CFS))
View(streamflow2)
streamflow2 <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M"))) %>%
mutate(Date = as.Date(DateTime)) %>%
group_by(Site, Date) %>%
summarise(CFS = mean(Streamflow_CFS))
View(streamflow2)
RockCreek <- ggplot(data = filter(streamflow2, Site == "RockCreek"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 years", date_labels = "%Y", minor_breaks = "1 year")
ggplotly(RockCreek)
RockCreek <- ggplot(data = filter(streamflow2, Site == "RockCreek"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(RockCreek)
RockCreek <- ggplot(data = filter(streamflow2, Site == "RockCreek" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(RockCreek)
PVOut <- ggplot(data = filter(streamflow2, Site == "PleasantValleyOutflow" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(PVOut)
View(all_flow)
BishopAll <- ggplot(data = filter(streamflow2, Site == "BishopCreeKTotal" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(BishopAll)
BPCreek <- ggplot(data = filter(streamflow2, Site == "
BigPineCreek" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(BPCreek)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(BPCreek)
raw <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
View(raw)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(BPCreek)
streamflow2$CFS <- round(streamflow2$CFS, 2)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(BPCreek)
streamflow2 <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M"))) %>%
mutate(Date = as.Date(DateTime)) %>%
group_by(Site, Date) %>%
summarise(CFS = mean(Streamflow_CFS))
streamflow2$CFS <- round(streamflow2$CFS, 1)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date( date_labels = "%M")
ggplotly(BPCreek)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" & Date >= "2023-08-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date( date_breaks = "1 months")
ggplotly(BPCreek)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" & Date >= "2023-10-01"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date( date_breaks = "1 months")
ggplotly(BPCreek)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" ), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date( date_breaks = "1 months")
ggplotly(BPCreek)
BPCreek <- ggplot(data = filter(streamflow2, Site == "BigPineCreek" ), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date()
ggplotly(BPCreek)
FishSprings <- ggplot(data = filter(streamflow2, Site == "FishSprings"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(FishSprings)
FishSprings <- ggplot(data = filter(streamflow2, Site == "FishSprings"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date()
ggplotly(FishSprings)
OwensRiver <- ggplot(data = filter(streamflow2, Site == "OwensRiverBelowBPC" ), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date(date_breaks = "1 months", date_labels = "%M")
ggplotly(OwensRiver)
OwensRiver <- ggplot(data = filter(streamflow2, Site == "OwensRiverBelowBPC" ), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date()
ggplotly(OwensRiver)
TinemahaResOutflow <- ggplot(data = filter(streamflow2, Site == "TinemahaResOutflow" ), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date()
ggplotly(TinemahaResOutflow)
LonePineCreek <- ggplot(data = filter(streamflow2, Site == "LonePineCreek"), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date()
ggplotly(LonePineCreek)
LAAAlabamaGates<- ggplot(data = filter(streamflow2, Site == "LAAAlabamaGates" ), aes(x = Date, y = CFS)) +
geom_line(color = "blue") +
theme_bw(base_size=13) +
labs( x = NULL, y = "FLow CFS", title = NULL) +
scale_x_date()
ggplotly(LAAAlabamaGates)
View(raw)
library(flexdashboard)
library(tidyverse)
library(DBI)
library(odbc)
library(lubridate)
library(hms)
library(glue)
library(dbplyr)
library(janitor)
library(plotly)
library(DT)
streamflow2 <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M"))) %>%
mutate(Date = as.Date(DateTime)) %>%
group_by(Site, Date) %>%
summarise(CFS = mean(Streamflow_CFS))
streamflow2$CFS <- round(streamflow2$CFS, 1)
raw <- read_csv("C:/Users/envir/Documents/106/Streamflow/LADWP_Webscraping/streamflow2.csv",
col_types = cols(Streamflow_CFS = col_number(),
DateTime = col_datetime(format = "%m/%d/%Y %H:%M")))
Streamflow_table <- datatable(raw, extensions = c( "BUttons", "FixedColumns"),
filter = 'top',
options = list (autoWidth = TRUE,
dom = 'Bfrtip',
pageLength = 30,
searchHighlight = FALSE,
buttons = c('copy','csv','print'),
scrollx = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover'),
rownames = FALSE)
Streamflow_table <- datatable(raw, extensions = c( "Buttons", "FixedColumns"),
filter = 'top',
options = list (autoWidth = TRUE,
dom = 'Bfrtip',
pageLength = 30,
searchHighlight = FALSE,
buttons = c('copy','csv','print'),
scrollx = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover'),
rownames = FALSE)
Streamflow_table
Streamflow_table <- datatable(raw, extensions = c( "Buttons", "FixedColumns"),
filter = 'top',
options = list (autoWidth = TRUE,
dom = 'Bfrtip',
pageLength = 30,
searchHighlight = FALSE,
buttons = c('copy','csv','excel','print'),
scrollx = TRUE,
fixedColumns = list(leftColumns = 2)),
class = c('compact cell-border stripe hover'),
rownames = FALSE)
Streamflow_table
